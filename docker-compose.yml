version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: imagegenai-postgres
    environment:
      POSTGRES_DB: imagegenai
      POSTGRES_USER: imagegenai
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - imagegenai-network

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    container_name: imagegenai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - imagegenai-network

  # FastAPI Backend
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: imagegenai-backend
    environment:
      - DATABASE_URL=postgresql://imagegenai:password@postgres:5432/imagegenai
      - REDIS_URL=redis://redis:6379
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=True
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8000:8000"
    volumes:
      - ./apps/backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - imagegenai-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: imagegenai-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - imagegenai-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  backend_uploads:

networks:
  imagegenai-network:
    driver: bridge
